<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FileContentTask" Id="{b1426772-2191-466d-91b5-aa0980e0e484}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'enable_dynamic_creation'}	
{attribute 'no_explicit_call' := 'do not call this function block directly'} 
FUNCTION_BLOCK ABSTRACT FileContentTask EXTENDS Task
VAR_INPUT
 	Timeout : TIME := T#2S;
END_VAR
VAR
	_FileContentManager : REFERENCE TO FileContentManager; 
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Property Name="FileContentManager" Id="{95316b75-b424-45bb-97b1-26843b4a2b25}">
      <Declaration><![CDATA[PROPERTY INTERNAL FileContentManager : REFERENCE TO FileContentManager]]></Declaration>
      <Get Name="Get" Id="{aab6cba6-f907-4768-b040-7195847efa90}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[FileContentManager REF= _FileContentManager;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{df151c7c-2c16-43d3-a58c-cad1dfaeee7d}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[_FileContentManager REF= FileContentManager;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="GetErrorMessageByErrorId" Id="{4906c350-513b-4d09-9130-9de049d9da95}">
      <Declaration><![CDATA[METHOD PROTECTED GetErrorMessageByErrorId : WSTRING(255)
VAR_INPUT
	errorId : UDINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[CASE errorId OF
	1795: GetErrorMessageByErrorId := "invalid or unknown file handle";
	1802: GetErrorMessageByErrorId := "no memory for read buffer";
	1804: GetErrorMessageByErrorId := "file not found";
	1806: GetErrorMessageByErrorId := "file was opened with wrong method";
	1827: GetErrorMessageByErrorId := "folder already exists or invalid sPathName or ePath parameter";
END_CASE

IF GetErrorMessageByErrorId <> "" THEN
	GetErrorMessageByErrorId := WStringHelper.Concat2(": ", GetErrorMessageByErrorId);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="RequestAbort" Id="{fa71c439-336d-4f9c-a1c5-d05aade6474d}">
      <Declaration><![CDATA[METHOD RequestAbort : BOOL
VAR_INPUT
	start : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Execute(start) = EXECUTION_STATE.BUSY THEN
	RequestAbort := EXECUTION_STATE.BUSY;
ELSE
	RequestAbort := EXECUTION_STATE.DONE;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Validate" Id="{7d61816f-95ff-4e61-86a7-6e2402916cc3}">
      <Declaration><![CDATA[METHOD PROTECTED Validate
VAR
	//exceptionFactory : ExceptionFactory(__POUNAME(), ClassName, CurrentNamespace.Name);
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT __ISVALIDREF(FileContentManager) THEN
	//exceptionFactory.ThrowException(__POSITION(), "File content menager is not specified");
END_IF

IF FileContentManager.FileHandle = 0 THEN
	//exceptionFactory.ThrowException(__POSITION(), "File is not open");
END_IF]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>