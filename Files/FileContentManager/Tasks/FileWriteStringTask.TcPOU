<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FileWriteStringTask" Id="{11f227f3-d74c-4b76-8e8a-817d66a93a26}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'enable_dynamic_creation'}	
{attribute 'no_explicit_call' := 'do not call this function block directly'} 
FUNCTION_BLOCK FileWriteStringTask EXTENDS FileContentTask
VAR
	_ClassName : STRING := __POUNAME();

	_WriteString : Tc2_System.FB_FilePuts;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Property Name="ClassName" Id="{241093e6-aef9-41a4-80dc-4a4030af379c}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY ClassName : STRING]]></Declaration>
      <Get Name="Get" Id="{13774b7d-cb68-4b6c-8564-e5a373a9b492}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[ClassName := _ClassName;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Execute" Id="{b9fc854c-99d8-41d6-958d-2b9a4cb2aec8}">
      <Declaration><![CDATA[METHOD Execute : BOOL
VAR_INPUT
	start : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF start THEN
	Validate();

	_WriteString(
		bExecute := FALSE,
		hFile := FilecontentManager.FileHandle,
		sNetId := FilecontentManager.AmsNetId,
		tTimeout := Timeout
	); 
END_IF

_WriteString(bExecute := TRUE);

IF _WriteString.bError THEN
	//exceptionFactory.ThrowException(__POSITION(), WStringHelper.Concat2("Write string to file failed", GetErrorMessageByErrorId(_WriteString.nErrId)), __POUNAME(), ClassName, CurrentNamespace.Name, __POSITION(), _WriteString.nErrId);
ELSIF NOT _WriteString.bBusy THEN
	Execute := EXECUTION_STATE.DONE;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Property Name="StringToWrite" Id="{f6bd9bef-8602-4d31-a6c1-d54ae63d2ba3}">
      <Declaration><![CDATA[PROPERTY StringToWrite : REFERENCE TO Tc2_System.T_MaxString]]></Declaration>
      <Get Name="Get" Id="{9fe4b6c2-f317-4fbd-b485-0420203c945c}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[StringToWrite REF= _WriteString.sLine;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Validate" Id="{5ef60bb2-32b8-49d7-9581-810c2f7b4e67}">
      <Declaration><![CDATA[METHOD PROTECTED Validate]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^.Validate();

CASE FileContentManager.OpenMode OF
	FILE_OPEN_MODE.READ_EXISTING:
		//exceptionFactory.ThrowException(__POSITION(), "File is not open for writing");
END_CASE

IF FileContentManager.ContentHandlingMode <> FILE_CONTENT_HANDLING_MODE.TEXT THEN
	//exceptionFactory.ThrowException(__POSITION(), "File is not open in text mode");
END_IF]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>