<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FileReadStringTask" Id="{50658161-f2b3-4754-8024-f8b761c7e377}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'enable_dynamic_creation'}	
{attribute 'no_explicit_call' := 'do not call this function block directly'} 
FUNCTION_BLOCK FileReadStringTask EXTENDS FileContentTask
VAR
	_ClassName : STRING := __POUNAME();

	_ReadString : Tc2_System.FB_FileGets;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Property Name="ClassName" Id="{17e8b6c3-5b1c-47e7-86d9-eb28eb0dd80c}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY ClassName : STRING]]></Declaration>
      <Get Name="Get" Id="{d086ac05-b4a6-44fc-9822-2f644494f311}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[ClassName := _ClassName;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Execute" Id="{669cb495-c528-4127-9fbd-46ab13f9f858}">
      <Declaration><![CDATA[METHOD Execute : BOOL
VAR_INPUT
	start : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF start THEN
	Validate();

	_ReadString(
		bExecute := FALSE,
		hFile := FilecontentManager.FileHandle,
		sNetId := FilecontentManager.AmsNetId,
		tTimeout := Timeout
	);	
END_IF

_ReadString(bExecute := TRUE);

IF _ReadString.bError THEN
	//exceptionFactory.ThrowException(__POSITION(), WStringHelper.Concat2("Read string from file failed", GetErrorMessageByErrorId(_ReadString.nErrId)), __POUNAME(), ClassName, CurrentNamespace.Name, __POSITION(), _ReadString.nErrId);
ELSIF NOT _ReadString.bBusy THEN
	Execute := EXECUTION_STATE.DONE;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Property Name="LoadedString" Id="{8e690dbc-86bf-4f83-9be8-37ea8a152b00}">
      <Declaration><![CDATA[PROPERTY LoadedString : REFERENCE TO Tc2_System.T_MaxString]]></Declaration>
      <Get Name="Get" Id="{cffff10f-c614-4c56-932d-c14bb2781531}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[LoadedString REF= _ReadString.sLine;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Validate" Id="{8929b0fb-3ef1-4c4c-b56e-e2bd279a7458}">
      <Declaration><![CDATA[METHOD PROTECTED Validate]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^.Validate();

CASE FileContentManager.OpenMode OF
	FILE_OPEN_MODE.APPEND, FILE_OPEN_MODE.WRITE_EMPTY:
		//exceptionFactory.ThrowException(__POSITION(), "File is not open for reading");
END_CASE

IF FileContentManager.ContentHandlingMode <> FILE_CONTENT_HANDLING_MODE.TEXT THEN
	//exceptionFactory.ThrowException(__POSITION(), "File is not open in text mode");
END_IF]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>