<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FileWriteBytesTask" Id="{457057c6-4328-4564-8244-74d985664994}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'enable_dynamic_creation'}	
{attribute 'no_explicit_call' := 'do not call this function block directly'} 
FUNCTION_BLOCK FileWriteBytesTask EXTENDS FileContentTask
VAR
	_ClassName : STRING := __POUNAME();

    _WriteBytes : Tc2_System.FB_FileWrite;
	_SourceBuffer : DynamicByteArray;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Property Name="BytesToWrite" Id="{7f53816b-fac1-4233-9bda-daad20b7ad5d}">
      <Declaration><![CDATA[PROPERTY BytesToWrite : REFERENCE TO DynamicByteArray]]></Declaration>
      <Get Name="Get" Id="{bbf6752b-abe2-45a1-a20e-9a85370d2d46}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[BytesToWrite REF= _SourceBuffer;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="ClassName" Id="{0912e5a3-5e0c-432b-b735-cf9fe8656225}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY ClassName : STRING]]></Declaration>
      <Get Name="Get" Id="{61f6e2ff-0f5f-406a-8857-381134143a48}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[ClassName := _ClassName;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Execute" Id="{5978efa4-f3f1-4f06-8a73-816a3748203b}">
      <Declaration><![CDATA[METHOD Execute : BOOL
VAR_INPUT
	start : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF start THEN
	Validate();

	_WriteBytes(
		bExecute := FALSE,
		hFile := FilecontentManager.FileHandle,
		pWriteBuff := _SourceBuffer.Address,
		cbWriteLen := TO_UDINT(_SourceBuffer.Count),
		sNetId := FilecontentManager.AmsNetId,
		tTimeout := Timeout 
	);	
END_IF

_WriteBytes(bExecute := TRUE);

IF _WriteBytes.bError THEN
	//exceptionFactory.ThrowException(__POSITION(), WStringHelper.Concat2("Write bytes to file failed", GetErrorMessageByErrorId(_WriteBytes.nErrId)), __POUNAME(), ClassName, CurrentNamespace.Name, __POSITION(), _WriteBytes.nErrId);
ELSIF NOT _WriteBytes.bBusy THEN
	Execute := EXECUTION_STATE.DONE;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Validate" Id="{5ed0bb75-5f14-4a58-81da-6384356aa26c}">
      <Declaration><![CDATA[METHOD PROTECTED Validate]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^.Validate();

CASE FileContentManager.OpenMode OF
	FILE_OPEN_MODE.READ_EXISTING:
		//exceptionFactory.ThrowException(__POSITION(), "File is not open for writing");
END_CASE

IF FileContentManager.ContentHandlingMode <> FILE_CONTENT_HANDLING_MODE.BINARY THEN
	//exceptionFactory.ThrowException(__POSITION(), "File is not open in binary mode");
END_IF]]></ST>
      </Implementation>
    </Method>
    <Property Name="WrittenBytesCount" Id="{e8c31588-ab40-4abe-8fea-ec6579566443}">
      <Declaration><![CDATA[PROPERTY WrittenBytesCount : UDINT]]></Declaration>
      <Get Name="Get" Id="{b444eca8-ad0a-4d5a-8e13-2d72c71db246}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[WrittenBytesCount := _WriteBytes.cbWrite;]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>