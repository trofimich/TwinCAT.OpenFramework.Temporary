<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FileOpenTask" Id="{cdd5f7ef-d507-46f5-a517-2d10f136b53b}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'enable_dynamic_creation'}	
{attribute 'no_explicit_call' := 'do not call this function block directly'} 
FUNCTION_BLOCK FileOpenTask EXTENDS FileContentTask
VAR
	_ClassName : STRING := __POUNAME();

	_Open : Tc2_System.FB_FileOpen;
	_OpenMode : FILE_OPEN_MODE;
	_ContentHandlingMode : FILE_CONTENT_HANDLING_MODE;		
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Property Name="AmsNetId" Id="{e0810aea-f2fb-48a8-903c-df260ce3d2d3}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
{attribute 'OPC.UA.DA.Property' := '1'}
PROPERTY AmsNetId : Tc2_System.T_AmsNetID]]></Declaration>
      <Get Name="Get" Id="{4897b848-77e1-4394-85d3-716e8e0cc1d9}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[AmsNetId := _Open.sNetId;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{fed7b16f-ac3a-45ec-a3bb-2e87753cea2e}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[_Open.sNetId := AmsNetId;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="ClassName" Id="{089cfd8b-a488-4c5b-80c3-31bd17af5a4b}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY ClassName : STRING]]></Declaration>
      <Get Name="Get" Id="{e5e61757-7352-4607-93e5-5695d606b197}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[ClassName := _ClassName;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="ContentHandlingMode" Id="{ba9bdbc6-6340-4d5f-bf60-84028fd6c118}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
{attribute 'OPC.UA.DA.Property' := '1'}
PROPERTY ContentHandlingMode : FILE_CONTENT_HANDLING_MODE]]></Declaration>
      <Get Name="Get" Id="{2739e209-8bf2-4542-9cfd-a5408214b831}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[ContentHandlingMode := _ContentHandlingMode;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{905cf5b8-a5d6-426c-a3d2-41a89f609b49}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[_ContentHandlingMode := ContentHandlingMode;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="Execute" Id="{ecadf39e-b907-480d-a969-8da6c5b792f2}">
      <Declaration><![CDATA[METHOD Execute : BOOL
VAR_INPUT
	start : BOOL;
END_VAR
VAR
	
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF start THEN
	Validate();
	
	_Open(
		bExecute := FALSE,
		nMode := TO_DWORD(openMode) OR TO_DWORD(contentHandlingMode),
		tTimeout := Timeout 
	);	
END_IF

_Open(bExecute := TRUE);

IF _Open.bError THEN
	//exceptionFactory.ThrowException(__POSITION(), WStringHelper.Concat2("File open failed", GetErrorMessageByErrorId(_Open.nErrId)), __POUNAME(), ClassName, CurrentNamespace.Name, __POSITION(), _Open.nErrId);	
ELSIF NOT _Open.bBusy THEN
	FileContentManager.FilePath := _Open.sPathName;
	FileContentManager.OpenMode := _OpenMode;
	FileContentManager.ContentHandlingMode := _ContentHandlingMode;
	FileContentManager.PathType := _Open.ePath;
	FileContentManager.AmsNetId := _Open.sNetId;
	FileContentManager.FileHandle := _Open.hFile;
	
	Execute := EXECUTION_STATE.DONE;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Property Name="FilePath" Id="{d11eaf17-bdc4-431a-8d42-67a4a2039e6c}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
{attribute 'OPC.UA.DA.Property' := '1'}
PROPERTY FilePath : Tc2_System.T_MaxString]]></Declaration>
      <Get Name="Get" Id="{dc5d9aeb-64d4-4f09-9dd7-6d23a194f7e0}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[FilePath := _Open.sPathName;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{cda62e49-c241-4f3b-9fcc-bcbd7aba61df}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[_Open.sPathName := FilePath;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="OpenMode" Id="{417d9a01-e4f3-41c3-b9ae-d701f1b0a94f}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
{attribute 'OPC.UA.DA.Property' := '1'}
PROPERTY OpenMode : FILE_OPEN_MODE]]></Declaration>
      <Get Name="Get" Id="{b6f938cd-0732-46fc-a01b-d17ad082814d}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[OpenMode := _OpenMode;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{15090a11-58be-4c35-8b23-587d5b168d5e}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[_OpenMode := OpenMode;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Property Name="PathType" Id="{4e62d136-3c37-4e89-9a83-66775627a12a}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
{attribute 'OPC.UA.DA.Property' := '1'}
{attribute 'OPC.UA.DA.Access' := '1'}
PROPERTY PathType : E_OpenPath]]></Declaration>
      <Get Name="Get" Id="{91b7c649-fd0f-4567-8d7a-d2b7f2516f6e}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[PathType := _Open.ePath;]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{72587730-2d56-446f-b736-71fe2489c287}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[_Open.ePath := PathType;]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="Validate" Id="{7f6e4b6c-5c82-44f6-b880-17a6bc43baf2}">
      <Declaration><![CDATA[METHOD PROTECTED Validate]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT __ISVALIDREF(FileContentManager) THEN
	//exceptionFactory.ThrowException(__POSITION(), "File content menager is not specified");
END_IF

IF FilePath = '' THEN
	//exceptionFactory.ThrowException(__POSITION(), "File path is not specified");
END_IF]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>