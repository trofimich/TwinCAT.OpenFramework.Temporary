<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FileReadBytesTask" Id="{9f0deac9-09f8-4c3c-8915-7a4b99e7f180}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'enable_dynamic_creation'}	
{attribute 'no_explicit_call' := 'do not call this function block directly'} 
FUNCTION_BLOCK FileReadBytesTask EXTENDS FileContentTask
VAR
	_ClassName : STRING := __POUNAME();

	_ReadBytes : Tc2_System.FB_FileRead;
	_TargetBuffer : DynamicByteArray;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Property Name="ClassName" Id="{d77c90d5-7e93-4c78-8175-9419cd911f7c}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY ClassName : STRING]]></Declaration>
      <Get Name="Get" Id="{cbe2f517-82d1-415a-ae03-56f38375a4ec}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[ClassName := _ClassName;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Execute" Id="{971a6425-cb5c-422c-b419-c88de00ed4f2}">
      <Declaration><![CDATA[METHOD Execute : BOOL
VAR_INPUT
	start : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF start THEN
	Validate();

	_ReadBytes(		
		bExecute := FALSE,
		hFile := FilecontentManager.FileHandle,
		pReadBuff := _TargetBuffer.Address,
		cbReadLen := MaxBytesToReadCount,
		sNetId := FilecontentManager.AmsNetId,
		tTimeout := Timeout
	);	
END_IF

_ReadBytes(bExecute := TRUE);

IF _ReadBytes.bError THEN
	//exceptionFactory.ThrowException(__POSITION(), WStringHelper.Concat2("Read string to file failed", GetErrorMessageByErrorId(_ReadBytes.nErrId)), __POUNAME(), ClassName, CurrentNamespace.Name, __POSITION(), _ReadBytes.nErrId);
ELSIF NOT _ReadBytes.bBusy THEN
	Execute := EXECUTION_STATE.DONE;
END_IF
]]></ST>
      </Implementation>
    </Method>
    <Property Name="LoadedBytes" Id="{212c20ab-78e0-487d-ae99-887fecc4f1e1}">
      <Declaration><![CDATA[PROPERTY LoadedBytes : POINTER TO BYTE]]></Declaration>
      <Get Name="Get" Id="{04f249da-06a7-4c9a-a870-dd8b9bd03eaa}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[LoadedBytes := _TargetBuffer.Address;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="LoadedBytesCount" Id="{b869df6f-ee29-456e-a0cb-c4123f82f76f}">
      <Declaration><![CDATA[PROPERTY LoadedBytesCount : UDINT]]></Declaration>
      <Get Name="Get" Id="{44e0907a-033c-4895-8d98-07f9b3c1a072}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[LoadedBytesCount := _ReadBytes.cbRead;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="MaxBytesToReadCount" Id="{ebb5eab9-8b81-47b5-ad08-3adf151bca8c}">
      <Declaration><![CDATA[PROPERTY MaxBytesToReadCount : UDINT]]></Declaration>
      <Get Name="Get" Id="{8926370c-d2c9-4921-b638-d60efcbd8420}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[MaxBytesToReadCount := TO_UDINT(_TargetBuffer.Count);]]></ST>
        </Implementation>
      </Get>
      <Set Name="Set" Id="{c26a521f-5c38-49b4-b5af-f4056de84c8f}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[_TargetBuffer.Resize(TO_DINT(MaxBytesToReadCount));]]></ST>
        </Implementation>
      </Set>
    </Property>
    <Method Name="Validate" Id="{5e54c155-a01c-4244-872e-ec5e69e37cb9}">
      <Declaration><![CDATA[METHOD PROTECTED Validate]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^.Validate();

CASE FileContentManager.OpenMode OF
	FILE_OPEN_MODE.APPEND, FILE_OPEN_MODE.WRITE_EMPTY:
		//exceptionFactory.ThrowException(__POSITION(), "File is not open for reading");
END_CASE

IF FileContentManager.ContentHandlingMode <> FILE_CONTENT_HANDLING_MODE.BINARY THEN
	//exceptionFactory.ThrowException(__POSITION(), "File is not open in binary mode");
END_IF

IF _TargetBuffer.Count < 1 THEN
	//exceptionFactory.ThrowException(__POSITION(), "Buffer is empty (MaxBytesToReadCount has value 0)");
END_IF]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>