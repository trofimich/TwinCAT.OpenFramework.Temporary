<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="OpcUaDARequestItem" Id="{36919cce-714e-4df2-bc2b-5f85088b14e8}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK ABSTRACT OpcUaDARequestItem EXTENDS OpcUaRequestItem
VAR
	_NamespaceUri : STRING(Tc2_System.MAX_STRING_LENGTH);
	_NodeId: Tc3_PLCopen_OpcUa.ST_UANodeID;		
	_NamespaceIndexValid : BOOL;
	
	_GetNodeHandle : Tc3_PLCopen_OpcUa.UA_NodeGetHandle;
	_ReleaseNodeHandle : Tc3_PLCopen_OpcUa.UA_NodeReleaseHandle;	
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="GetHandle" Id="{99479746-56eb-4487-8d29-4073bd239e0d}">
      <Declaration><![CDATA[METHOD GetHandle : OPC_UA_ACTION_EXECUTION_STATE
VAR_INPUT
	connectionHandle : DWORD;
END_VAR
VAR_OUTPUT
	exception : Exception;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[_ConnectionHandle := connectionHandle;

GetHandle := OPC_UA_ACTION_EXECUTION_STATE.DONE;
	
IF NOT _NamespaceIndexValid THEN
	ExceptionHelper.Throw(0, WStringHelper.Concat3("UA_GetNodeHandle error: invalid namespace index for namespace '", TO_WSTRING(_NamespaceUri), "'"), __POUNAME(), ClassName, CurrentNamespace.Name, __POSITION());				
	GetHandle := OPC_UA_ACTION_EXECUTION_STATE.ERROR;				
	AdsLogger.LogMessage(LOGGING_LEVEL.INFORMATION, WStringHelper.Concat3("---OpcUaRequest GetNodeHandle error: invalid namespace index for namespace '", TO_WSTRING(_NamespaceUri), "'"));
ELSE
	_GetNodeHandle(Execute := TRUE, ConnectionHdl := _ConnectionHandle, NodeID := _NodeId);

	IF _GetNodeHandle.Error THEN
		ExceptionHelper.Throw(_GetNodeHandle.ErrorID, WStringHelper.Concat5("UA_GetNodeHandle error ", TO_WSTRING(_GetNodeHandle.ErrorID), " (NodeID.sIdentifier = '", TO_WSTRING(_GetNodeHandle.NodeID.sIdentifier), "')"), __POUNAME(), ClassName, CurrentNamespace.Name, __POSITION());					
		GetHandle := OPC_UA_ACTION_EXECUTION_STATE.ERROR;					
		AdsLogger.LogMessage(LOGGING_LEVEL.INFORMATION, WStringHelper.Concat3("---OpcUaRequest GetNodeHandle error: ", "UA_GetNodeHandle error ", TO_WSTRING(_GetNodeHandle.ErrorID)));
	ELSIF _GetNodeHandle.Busy THEN
		GetHandle := OPC_UA_ACTION_EXECUTION_STATE.BUSY;			
	END_IF
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="ReleaseHandle" Id="{6440ec1d-6f29-4558-882d-4d77bafb5975}">
      <Declaration><![CDATA[METHOD ReleaseHandle : OPC_UA_ACTION_EXECUTION_STATE
VAR_OUTPUT
	exception : Exception;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[ReleaseHandle := OPC_UA_ACTION_EXECUTION_STATE.DONE;
	
_ReleaseNodeHandle(Execute := TRUE, ConnectionHdl := _ConnectionHandle, NodeHdl := _GetNodeHandle.NodeHdl);

IF _ReleaseNodeHandle.Error THEN
	ExceptionHelper.Throw(_ReleaseNodeHandle.ErrorID, WCONCAT("UA_ReleaseNodeHandle error ", TO_WSTRING(_ReleaseNodeHandle.ErrorID)), __POUNAME(), ClassName, CurrentNamespace.Name, __POSITION());
	ReleaseHandle := OPC_UA_ACTION_EXECUTION_STATE.ERROR;			
	AdsLogger.LogMessage(LOGGING_LEVEL.INFORMATION, WStringHelper.Concat3("---OpcUaRequest ReleaseNodeHandle error: ", "UA_ReleaseNodeHandle error ", TO_WSTRING(_ReleaseNodeHandle.ErrorID)));
ELSIF _GetNodeHandle.Busy THEN
	ReleaseHandle := OPC_UA_ACTION_EXECUTION_STATE.BUSY;			
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Reset" Id="{b0bce502-2752-4c66-b0fe-f1fabfe02c20}">
      <Declaration><![CDATA[METHOD Reset ]]></Declaration>
      <Implementation>
        <ST><![CDATA[_GetNodeHandle(Execute := FALSE);
ResetAction();
_ReleaseNodeHandle(Execute := FALSE);
]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetNamespaceIndexForNamespaceUri" Id="{56ce29d0-cb90-41b7-a095-cad6a8aaba4a}">
      <Declaration><![CDATA[METHOD SetNamespaceIndexForNamespaceUri
VAR_INPUT
	namespaceUri : STRING(Tc2_System.MAX_STRING_LENGTH);
	namespaceIndex : UINT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT _NamespaceIndexValid AND_THEN _NamespaceUri = namespaceUri THEN
	_NodeId.nNamespaceIndex := namespaceIndex;
	_NamespaceIndexValid := TRUE;					
END_IF]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>