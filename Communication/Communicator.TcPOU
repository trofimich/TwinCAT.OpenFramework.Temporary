<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="Communicator" Id="{c51ea328-1ad2-4150-bf21-69a5a6298ef3}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK ABSTRACT Communicator EXTENDS TC.ToolkitObject
VAR_INPUT
	CycleInterval : TIME; 
	CyclicMode : BOOL; 
END_VAR
VAR_OUTPUT
	{attribute 'OPC.UA.DA.Access' := '1'}	
	Configured : BOOL;
	{attribute 'OPC.UA.DA.Access' := '1'}	
	CycleCount : ULINT;
	{attribute 'OPC.UA.DA.Access' := '1'}	
	DefaultOperationTimeout : TIME; 
END_VAR
VAR
	{attribute 'OPC.UA.DA' := '0'}	
	_InitialCyclicMode : BOOL; 
	{attribute 'OPC.UA.DA' := '0'}	
	_LastException : Exception;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Internal methods to override" Id="{433e7843-11fb-015f-3b11-10f8d73326b0}" />
    <Folder Name="Service methods" Id="{28df0cb1-f445-0eae-3e86-2f4f177a0128}" />
    <Property Name="Busy" Id="{acbc8522-7f92-46a6-9a7a-4c37eb222979}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
{attribute 'OPC.UA.DA' := '1'}
{attribute 'OPC.UA.DA.Property' := '1'}
PROPERTY ABSTRACT Busy : BOOL]]></Declaration>
      <Get Name="Get" Id="{6f3f9f49-e8b5-4432-b9e5-c73b5df26ea4}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Clear" Id="{dfc1da11-3da6-4078-befc-749dc8cc9443}">
      <Declaration><![CDATA[METHOD Clear : BOOL
VAR_OUTPUT
	exception : Exception;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Busy THEN
	ExceptionHelper.Throw(0, "Communicator is busy", __POUNAME(), ClassName, CurrentNamespace.Name, __POSITION());
	RETURN;
END_IF

AdsLogger.LogMessage(LOGGING_LEVEL.INFORMATION, "---Communicator.Clear");

CycleCount := 0;
_LastException.Clear();

Clear := InternalClear(exception => exception);]]></ST>
      </Implementation>
    </Method>
    <Property Name="CommunicationTypeName" Id="{c74b7738-018d-42f7-93b9-781d86a80ce8}">
      <Declaration><![CDATA[PROPERTY ABSTRACT CommunicationTypeName : STRING]]></Declaration>
      <Get Name="Get" Id="{029cc94a-5457-4247-9fed-6bae629f55aa}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Configure" Id="{d92b918b-a981-42f5-aa1c-968b19d6d620}">
      <Declaration><![CDATA[METHOD FINAL Configure : BOOL
VAR_INPUT
	settings : REFERENCE TO CommunicationSettings;
END_VAR
VAR_OUTPUT
	exception : Exception;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Busy THEN
	ExceptionHelper.Throw(0, "Communicator is busy", __POUNAME(), ClassName, CurrentNamespace.Name, __POSITION());
	RETURN;
END_IF

IF NOT __ISVALIDREF(settings) THEN
	ExceptionHelper.Throw(0, "Parameter 'settings' has not been specified", __POUNAME(), ClassName, CurrentNamespace.Name, __POSITION());
	RETURN;
END_IF

IF CommunicationTypeName <> settings.CommunicationTypeName THEN
	ExceptionHelper.Throw(0, WStringHelper.Concat4("Communicator and communication settings are incompatible because has different CommunicationTypeName: ", TO_WSTRING(CommunicationTypeName), " and ", TO_WSTRING(settings.CommunicationTypeName)), __POUNAME(), ClassName, CurrentNamespace.Name, __POSITION());
	RETURN;
END_IF

IF settings.DefaultOperationTimeout > T#0S THEN
	DefaultOperationTimeout := settings.DefaultOperationTimeout;
ELSE	
	DefaultOperationTimeout := Tc2_System.DEFAULT_ADS_TIMEOUT;
END_IF

AdsLogger.LogMessage(LOGGING_LEVEL.INFORMATION, "---Communicator.Configure");

Configured := Configure := InternalConfigure(settings, exception => exception); ]]></ST>
      </Implementation>
    </Method>
    <Property Name="DataProcessed" Id="{ec69b158-0bc9-4b4e-8455-43d8b34fba09}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
{attribute 'OPC.UA.DA' := '1'}
{attribute 'OPC.UA.DA.Property' := '1'}
PROPERTY DataProcessed : BOOL]]></Declaration>
      <Get Name="Get" Id="{88b9b370-37b2-4a92-ae5b-718815693bd3}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="Error" Id="{ddd9647a-1280-4bcd-ae2d-43cd5ba67f11}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
{attribute 'OPC.UA.DA' := '1'}
{attribute 'OPC.UA.DA.Property' := '1'}
PROPERTY Error : BOOL]]></Declaration>
      <Get Name="Get" Id="{63a76cc6-6148-4884-bdc9-eb791c637011}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Execute" Id="{4e0fec5f-09f0-44f7-b315-fd6fd7524589}">
      <Declaration><![CDATA[METHOD ABSTRACT Execute]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetOperationTimeout" Id="{98d48482-808e-0512-031b-25a7b489ed20}" FolderPath="Service methods\">
      <Declaration><![CDATA[METHOD PROTECTED GetOperationTimeout : TIME
VAR_INPUT
	operationTimeout : TIME;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF operationTimeout = T#0S THEN
	getOperationTimeout := DefaultOperationTimeout;
ELSE
	getOperationTimeout := operationTimeout;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="InternalClear" Id="{1d6f5521-f2f3-448a-bdae-b01ea63a7bc1}" FolderPath="Internal methods to override\">
      <Declaration><![CDATA[METHOD PROTECTED ABSTRACT InternalClear : BOOL
VAR_OUTPUT
	exception : Exception;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="InternalConfigure" Id="{963a6689-24ee-4add-a784-7f449c9755ce}" FolderPath="Internal methods to override\">
      <Declaration><![CDATA[METHOD PROTECTED ABSTRACT InternalConfigure : BOOL
VAR_INPUT
	settings : REFERENCE TO CommunicationSettings;
END_VAR
VAR_OUTPUT
	exception : Exception;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="InternalStart" Id="{771ca01c-edd8-4b11-82bb-00fb10add390}" FolderPath="Internal methods to override\">
      <Declaration><![CDATA[METHOD PROTECTED ABSTRACT InternalStart : BOOL
VAR_OUTPUT
	exception : Exception;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="InternalStop" Id="{5e07a7af-614c-4e84-8c8c-d0cc26f2ef34}" FolderPath="Internal methods to override\">
      <Declaration><![CDATA[METHOD PROTECTED ABSTRACT InternalStop]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Property Name="LastException" Id="{4bfb2624-14b2-4b1e-aae8-90c27a1dfa77}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
{attribute 'OPC.UA.DA.Property' := '1'}
{attribute 'OPC.UA.DA.Access' := '1'}
PROPERTY FINAL LastException : REFERENCE TO Exception]]></Declaration>
      <Get Name="Get" Id="{5c679964-232b-4b80-8391-742c5df38c63}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[LastException REF= _LastException;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Start" Id="{082abe1b-0d7b-4cbf-98fe-ee5338ebfb32}">
      <Declaration><![CDATA[METHOD FINAL Start : BOOL
VAR_OUTPUT
	exception : Exception;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Busy THEN
	ExceptionHelper.Throw(0, "Communicator is busy", __POUNAME(), ClassName, CurrentNamespace.Name, __POSITION());
	RETURN;
END_IF

AdsLogger.LogMessage(LOGGING_LEVEL.INFORMATION, "---Communicator.Start");

CycleCount := 0;
_LastException.Clear();

Start := InternalStart(exception => exception);]]></ST>
      </Implementation>
    </Method>
    <Method Name="Stop" Id="{bede61f5-c962-4f45-a6e8-adbfdd89db64}">
      <Declaration><![CDATA[METHOD FINAL Stop]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Busy THEN
	AdsLogger.LogMessage(LOGGING_LEVEL.INFORMATION, "---Communicator.Stop");
		
	InternalStop();
END_IF]]></ST>
      </Implementation>
    </Method>
    <Property Name="VariablesCount" Id="{55e54645-3cc7-0e9c-0086-64bb68ad623e}">
      <Declaration><![CDATA[PROPERTY ABSTRACT VariablesCount : DINT]]></Declaration>
      <Get Name="Get" Id="{c8db8f1b-519d-0c52-2baf-549346b30aee}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>