<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="UnifiedProgramStateMachine" Id="{c2f60136-4453-4444-9fa4-ba47dfe28431}" SpecialFunc="None">
    <Declaration><![CDATA[{attribute 'no_explicit_call' := 'do not call this function block directly'} 
FUNCTION_BLOCK UnifiedProgramStateMachine EXTENDS ProgramStateMachine
VAR_OUTPUT
	{attribute 'OPC.UA.DA.Access' := '1'}
	Configuration : UNIFIED_PROGRAM_CONFIGURATION;
	
	{attribute 'OPC.UA.DA.Access' := '1'}
	HaltedState : HaltedUnifiedProgramState;
	{attribute 'OPC.UA.DA.Access' := '1'}
	ReadyState : ReadyUnifiedProgramState;
	{attribute 'OPC.UA.DA.Access' := '1'}
	RunningState : RunningUnifiedProgramState;
	{attribute 'OPC.UA.DA.Access' := '1'}
	SuspendedState : SuspendedUnifiedProgramState;
	
	{attribute 'OPC.UA.DA.Access' := '1'}
	HaltedToReady : HaltedToReadyUnifiedProgramTransition;
	{attribute 'OPC.UA.DA.Access' := '1'}
	ReadyToRunning : ReadyToRunningUnifiedProgramTransition;
	{attribute 'OPC.UA.DA.Access' := '1'}
	RunningToHalted : RunningToHaltedUnifiedProgramTransition;
	{attribute 'OPC.UA.DA.Access' := '1'}
	RunningToReady : RunningToReadyUnifiedProgramTransition;
	{attribute 'OPC.UA.DA.Access' := '1'}
	RunningToSuspended : RunningToSuspendedUnifiedProgramTransition;
	{attribute 'OPC.UA.DA.Access' := '1'}
	SuspendedToRunning : SuspendedToRunningUnifiedProgramTransition;
	{attribute 'OPC.UA.DA.Access' := '1'}
	SuspendedToHalted : SuspendedToHaltedUnifiedProgramTransition;
	{attribute 'OPC.UA.DA.Access' := '1'}
	SuspendedToReady : SuspendedToReadyUnifiedProgramTransition;
	{attribute 'OPC.UA.DA.Access' := '1'}
	ReadyToHalted : ReadyToHaltedUnifiedProgramTransition;
	
	{attribute 'OPC.UA.DA' := '0'}
	StepExecutor : UnifiedProgramStepExecutor(THIS^);
END_VAR
VAR
	{attribute 'OPC.UA.DA' := '0'}
	_ClassName : STRING := __POUNAME();
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Property Name="ClassName" Id="{87994924-15ee-400a-bd9e-cd50ec459318}">
      <Declaration><![CDATA[{attribute 'monitoring' := 'call'}
PROPERTY ClassName : STRING]]></Declaration>
      <Get Name="Get" Id="{ea464b65-4d00-473f-9a11-98ffea3ac437}">
        <Declaration><![CDATA[]]></Declaration>
        <Implementation>
          <ST><![CDATA[ClassName := _ClassName;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="FB_init" Id="{a05e57c8-f2f8-4f64-af9b-fa0a4934b7ed}">
      <Declaration><![CDATA[METHOD FB_init : BOOL
VAR_INPUT
	bInitRetains : BOOL; // if TRUE, the retain variables are initialized (warm start / cold start)
	bInCopyCode : BOOL;  // if TRUE, the instance afterwards gets moved into the copy code (online change)
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[JsonHelper.SetFormatOptions(10, EJsonPrettyFormatOptions.eFormatSingleLineArray, 9, 1);]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetConfiguration" Id="{b44f0860-93f4-44d7-9049-bed83f064cb7}">
      <Declaration><![CDATA[{attribute 'TcRpcEnable':='1'}
METHOD GetConfiguration : JSON_DOCUMENT]]></Declaration>
      <Implementation>
        <ST><![CDATA[JsonHelper.CreateJsonFromStructure(ADR(Configuration), SIZEOF(Configuration), GetConfiguration);]]></ST>
      </Implementation>
    </Method>
    <Method Name="GetStateAndTransitionInstances" Id="{cfc7838f-6333-4c70-8bab-622a703238a6}">
      <Declaration><![CDATA[METHOD PROTECTED GetStateAndTransitionInstances
VAR_OUTPUT
	haltedState : POINTER TO HaltedProgramState;
	readyState : POINTER TO ReadyProgramState;
	runningState : POINTER TO RunningProgramState;
	suspendedState : POINTER TO SuspendedProgramState;
	
	haltedToReady : POINTER TO HaltedToReadyProgramTransition;
	readyToRunning : POINTER TO ReadyToRunningProgramTransition;
	runningToHalted : POINTER TO RunningToHaltedProgramTransition;
	runningToReady : POINTER TO RunningToReadyProgramTransition;
	runningToSuspended : POINTER TO RunningToSuspendedProgramTransition;
	suspendedToRunning : POINTER TO SuspendedToRunningProgramTransition;
	suspendedToHalted : POINTER TO SuspendedToHaltedProgramTransition;
	suspendedToReady : POINTER TO SuspendedToReadyProgramTransition;
	readyToHalted : POINTER TO ReadyToHaltedProgramTransition;	
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[haltedState := ADR(THIS^.HaltedState);
readyState := ADR(THIS^.ReadyState);
runningState := ADR(THIS^.RunningState);
suspendedState := ADR(THIS^.SuspendedState);

haltedToReady := ADR(THIS^.HaltedToReady);
readyToRunning := ADR(THIS^.ReadyToRunning);
runningToHalted := ADR(THIS^.RunningToHalted);
runningToReady := ADR(THIS^.RunningToReady);
runningToSuspended := ADR(THIS^.RunningToSuspended);
suspendedToRunning := ADR(THIS^.SuspendedToRunning);
suspendedToHalted := ADR(THIS^.SuspendedToHalted);
suspendedToReady := ADR(THIS^.SuspendedToReady);
readyToHalted := ADR(THIS^.ReadyToHalted);	]]></ST>
      </Implementation>
    </Method>
    <Method Name="InternalInitialize" Id="{8581a754-067c-4f8f-9ffe-91334117ae2c}">
      <Declaration><![CDATA[METHOD PROTECTED InternalInitialize 
VAR_OUTPUT
	states : ARRAY [0..ProgramConstants.MaxStateCount - 1] OF POINTER TO ProgramState;
	transitions : ARRAY [0..ProgramConstants.MaxTransitionCount - 1] OF POINTER TO ProgramTransition;
	defaultState : POINTER TO ProgramState;
END_VAR
VAR
	haltedState : POINTER TO HaltedProgramState;
	readyState : POINTER TO ReadyProgramState;
	runningState : POINTER TO RunningProgramState;
	suspendedState : POINTER TO SuspendedProgramState;
	
	haltedToReady : POINTER TO HaltedToReadyProgramTransition;
	readyToRunning : POINTER TO ReadyToRunningProgramTransition;
	runningToHalted : POINTER TO RunningToHaltedProgramTransition;
	runningToReady : POINTER TO RunningToReadyProgramTransition;
	runningToSuspended : POINTER TO RunningToSuspendedProgramTransition;
	suspendedToRunning : POINTER TO SuspendedToRunningProgramTransition;
	suspendedToHalted : POINTER TO SuspendedToHaltedProgramTransition;
	suspendedToReady : POINTER TO SuspendedToReadyProgramTransition;
	readyToHalted : POINTER TO ReadyToHaltedProgramTransition;	
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[]]></ST>
      </Implementation>
    </Method>
    <Method Name="SetConfiguration" Id="{a61c2062-f96b-44df-9da5-4f68a1087e31}">
      <Declaration><![CDATA[{attribute 'TcRpcEnable':='1'}
METHOD SetConfiguration
VAR_INPUT
	json : JSON_DOCUMENT;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[JsonHelper.SetStructureFromJson(json, ADR(Configuration), SIZEOF(Configuration));]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>